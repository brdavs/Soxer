#!/usr/bin/ruby
require 'fileutils'

def colorize(text, color_code); "\033#{color_code}#{text}\033[0m"; end
def b(text); colorize(text, "[1m"); end

def h
  '-'*79+"\n#{b 'Soxer'}, the web publishing tool. | Copyright 2010, Toni Anzlovar.\n"+'-'*79
end

def err message
  <<-END.gsub /^\s\s/, ''
  #{h}
  #{b "ERROR: "+message}
  Type #{b 'soxer help'} to get help.
  
  Soxer usage:
    #{b "soxer [action] [parameters]"}
    
  END
end

def notice message
  <<-END.gsub /^\s\s/, ''
  #{h}
  #{b message}
  
  END
end

def help 
  <<-END.gsub /^\s\s/, ''
  #{h}
  
  Soxer usage:
    #{b "soxer [action] [parameters]"}
    
  Actions:
  
    #{b 'create'}
      Creates a new soxer project directory with default sinatra/soxer layout.
      All aspects can be later customized to suite project's needs.
      
      First parameter:
        #{b 'empty'}     - Creates an empty project
        More project templates are in the making
        
        Other parameters:
          #{b '[name]'}  - The name of the project directory
        
    #{b 'test'}
      Runs the developement server (in the foreground) on your computer.
      Point your browser to #{b 'http://localhost:9394'} to view the result.
      You can exit with standard [ctrl]+c.
      
      Parameters:
        #{b '[int]'} - Port number you wish to run developement on
      
    #{b 'help'}
      Displays this help.
  
  Examples:
  
  #{b '$ soxer create blog myblog'}
    This command would create a new project directory 'myblog' with a mockup blog
    soxer/sinatra application in it. You can tweak the design and parameters to
    acheve the desired experience.
    
  #{b '$ soxer test 8907'}
    This command (when executed within the soxer project directory root) will
    run the developement server on local machine on port 8907.
    
  END
end

def create template, dir
  skel = File.dirname(__FILE__)+"/../lib/soxer/skel"
  case true
    when template==nil then
      return err "You did not enter the project type skeleton."
    when dir==nil then
      return err "You did not enter destination application directory."
    when !File.exist?(skel+'/'+template) then
      return err "The project skeleton directory does not exist."
    when File.exist?(dir) then
      return err "The destination directory exists."
    else
      FileUtils.mkdir(dir)
      FileUtils.cp_r( Dir.glob( File.join(skel, template, '*') ), dir)
      return notice "Successfuly created '#{dir}' application directory from '#{template}'."
  end
end

def test port
  port = 9394 unless port!=nil
  server = 'webrick'
  ENV['PATH'].split(':').each {|folder| server = 'thin' if File.exists?(folder+'/thin')}
  system("rackup -s #{server} -p #{port}")
  return "Developement mode ends."
end

case $*[0]
  when 'create' then printf create $*[1], $*[2]
  when 'test' then printf test $*[1]
  when 'prank' then printf prank
  when 'help' then printf help
  else printf err 'You did not specify an action!'
end

# TO COME LATER
x = <<END
      #{b 'corporate'} - Creates a corporate web page mockup
      #{b 'blog'}      - Creates a blog mockup
      #{b 'gallery'}   - Creates an image gallery mockup
END
